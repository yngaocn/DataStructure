#pragma once

class Sort
{
public:
	Sort(void);
	virtual ~Sort(void);

	///////////////////////////////////插入排序///////////////////////////////////////
	//直接插入排序
	//平均复杂度：O(n2)
	//最坏复杂度：O(n2)
	//辅存：O(1)
	//属于稳定排序
	static void StraightInsertSort(int a[], int n);
	
	//折半插入排序
	//平均复杂度：O(n2)
	//最坏复杂度：O(n2)
	//辅存：O(1)
	//属于稳定排序
	static void BinInsertSort(int a[], int n);

	//希尔排序
	//平均复杂度：O(nlogn)
	//最坏复杂度：O(n^s),s为所选分组
	//辅存：O(1)
	//属于稳定排序

	///////////////////////////////////快速排序///////////////////////////////////////
	//冒泡插入排序
	//平均复杂度：O(n2)
	//最坏复杂度：O(n2)
	//辅存：O(1)
	//属于稳定排序
	static void BubbleSort(int a[], int n);

	///////////////////////////////////选择排序///////////////////////////////////////

	//堆排序(注意：例如int a[5]数组第0个元素不用，调用时用HeapSort(a,4))
	//平均复杂度：O(nlogn)
	//最坏复杂度：O(nlogn)
	//辅存：O(1)
	//属于不稳定排序
	static void HeapAdjust(int k[], int i, int n);
	static void HeapSort(int k[], int n);

	///////////////////////////////////归并排序///////////////////////////////////////

	///////////////////////////////////基数排序///////////////////////////////////////

};
